create database dbmaster default character set utf8;

use dbmaster;

create table user_auth(
	id bigint(20) not null,
    auth varchar(255) not null
);
alter table user_auth add constraint pk_id primary key(id);
alter table user_auth modify column id bigint(20) auto_increment;
insert into user_auth(auth) values('일반회원');
insert into user_auth(auth) values('기자회원');
insert into user_auth(auth) values('관리자');
select * from user_auth;



create table user(
	id bigint(20) not null, 
    email varchar(255) not null,
    password varchar(255) not null,
    nick_name varchar(30) not null,
    phone_number bigint(11) zerofill not null,
    user_name  varchar(15) not null,
    user_address varchar(255) null,
    enabled bit(1) not null default 1, -- 1: 정상 0:블라인드처리
    create_ip varchar(255) null,
    user_auth bigint(20) not null default 1,
    user_image_path varchar(255) null,
    date_created datetime not null default current_timestamp,
    last_updated datetime not null default  current_timestamp on update current_timestamp
);

select * from user;

alter table user add constraint pk_id primary key(id);
alter table user modify column id bigint(20) auto_increment;
alter table user add constraint uq_nick_name unique(nick_name);
alter table user add constraint uq_user_name unique(user_name);
alter table user add constraint uq_email unique(email);
alter table user add constraint uq_user_image_path unique(user_image_path);
alter table user add constraint fk_user_auth foreign key(user_auth) references user_auth(id);
insert into user(email, password, nick_name, phone_number, user_name, user_auth) values('master@masterjung.org','masterjung9208!!','master',01037689208,'마스터',3);
update user set user_image_path='resource/img/default-img.gif' where id=6;
insert into user(email, password, nick_name, phone_number, user_name, user_auth) values('test','test','테스터',01012345678,'테스튜',1);
alter table user modify column user_image_path varchar(255) null default 'resource/img/default-img.git';

create table visit(
	id bigint(20) not null,
    visit_day datetime not null default current_timestamp,
    visit_ip varchar(255) not null
);

alter table visit add constraint pk_id primary key(id);
alter table visit modify column id bigint(20) auto_increment;

create table category(
	id bigint(20) not null,
    category_name varchar(255)
);
alter table category add constraint pk_id primary key(id);
alter table category modify column id bigint(20) auto_increment;

insert into category(category_name) values('질문게시판');
insert into category(category_name) values('공략게시판');
insert into category(category_name) values('뉴스게시판');
insert into category(category_name) values('이미지게시판');
insert into category(category_name) values('동영상게시판');
insert into category(category_name) values('게임정보게시판');


create table board_list(
	id bigint(20) not null,
    board_name varchar(255),
    category_id bigint(20) not null
);

alter table board_list add constraint pk_id primary key(id);
alter table board_list modify column id bigint(20) auto_increment;
alter table board_list add constraint fk_category_id foreign key(category_id) references category(id);
insert into board_list(board_name, category_id) values('질문메인1',1);
insert into board_list(board_name, category_id) values('공략메인1',2);
insert into board_list(board_name, category_id) values('뉴스메인1',3);
insert into board_list(board_name, category_id) values('이미지메인1',4);
insert into board_list(board_name, category_id) values('동영상메인1',5);
insert into board_list(board_name, category_id) values('게임정보1',6);

create table board(
	id bigint(20) not null,
    board_list_id bigint(20) not null,
    nick_name varchar(255) null,
    anonymity bit(1) not null default 1, -- 1:실명 0:익명
    create_ip varchar(255) null,
    enabled bit(1) not null default 1, -- 1:정상 -- 0: 블라인드처리
    refer int(11) not null default 0,
    depth int(11) not null default 0,
    step int(11) not null default 0,
    date_created datetime not null default current_timestamp,
    last_updated datetime not null default  current_timestamp on update current_timestamp,
    view_count int(11) not null default 0,
    vote_count int(11) not null default 0,
    title varchar(255) not null,
	content longtext not null,
    file_path varchar(255) null
);
select * from board;
alter table board add constraint pk_id primary key(id);
alter table board modify column id bigint(20) auto_increment;
alter table board add constraint fk_nick_name foreign key(nick_name) references user(nick_name) ON UPDATE CASCADE;
alter table board add constraint fk_board_list_id foreign key(board_list_id) references board_list(id);


create table content_vote(
	id bigint(20) not null,
    c_vote_id bigint(20) not null,
    content_voter varchar(255) not null,
    date_created datetime not null default current_timestamp
);
alter table content_vote add constraint pk_id primary key(id);
alter table content_vote modify column id bigint(20) auto_increment;
alter table content_vote add constraint fk_content_vote_content_voter foreign key(content_voter) references user(nick_name) ON UPDATE CASCADE;
alter table content_vote add constraint fk_content_vote_c_vote_id foreign key(c_vote_id) references board(id);


create table reply(
	id bigint(20) not null,
    reply_id bigint(20) not null,
    date_created datetime not null default current_timestamp,
    last_updated datetime not null  default  current_timestamp on update current_timestamp,
    reply_content varchar(255) null,
    r_nick_name varchar(255) not null,
	vote_count int(11) not null default 0,
    refer int(11) not null default 0,
    depth int(11) not null default 0,
    step int(11) not null default 0,
    enabled bit(1) not null default 1 -- 1:정상 0:블라인드처리
);
select * from reply;
select count(*) from reply where reply_id=1;
alter table reply add constraint pk_id primary key(id);
alter table reply modify column id bigint(20) auto_increment;
alter table reply add constraint fk_r_nick_name foreign key(r_nick_name) references user(nick_name) ON UPDATE CASCADE;
alter table reply add constraint fk_reply_id foreign key(reply_id) references board(id);
-- insert into reply(reply_id, reply_content, r_nick_name) values(1,'그것도 모르면서 게임을 하냐!!', 'master');
-- insert into reply(reply_id, reply_content, r_nick_name) values(1,'스팀 회원가입은 키보드와 마우스를 이용해서 모니터를 보며 하세요', 'master');
-- alter table reply modify column last_updated datetime not null default  current_timestamp on update current_timestamp;
-- ALTER TABLE 테이블이름  MODIFY COLUMN 필드이름 필드타입 DEFAULT 기본값
select * from reply;
delete from reply where id=1;

create table reply_vote(
	id bigint(20) not null,
    vote_id bigint(20) not null,
    reply_voter varchar(255) not null,
    date_created datetime not null default current_timestamp
);
select * from reply_vote;

alter table reply_vote add constraint pk_id primary key(id);
alter table reply_vote modify column id bigint(20) auto_increment;
alter table reply_vote add constraint fk_reply_voter foreign key(reply_voter) references user(nick_name) ON UPDATE CASCADE;
alter table reply_vote add constraint fk_vote_id foreign key(vote_id) references reply(id);
insert into reply_vote(vote_id, reply_voter) values(1,'master');

create table spam_word(
	id bigint(20) not null,
    word varchar(255) not null
);

alter table spam_word add constraint pk_id primary key(id);
alter table spam_word modify column id bigint(20) auto_increment;

-- ----------------------------------------
-- alter table user modify column last_updated datetime not null default  current_timestamp on update current_timestamp;
select *from 
board as b left join reply as r on b.id = r.reply_id
left join reply_vote as rv on r.id = rv.vote_id
where b.id=1 and b.enabled=1;

select r.id, r.reply_id, r.date_created, r.last_updated, r.reply_content, r.r_nick_name, r.vote_count, r.refer, r.depth, r.step, count(r.reply_id) reply_count, 
ifnull(rv.id,0) rv_id, ifnull(rv.vote_id, 0) rv_vote_id, ifnull(rv.reply_voter, 'null') rv_reply_voter, ifnull(rv.date_created, 0) rv_date_created 
from reply as r left join reply_vote as rv 
on r.id = rv.vote_id 
where r.reply_id=1 and r.enabled=1;

select r.id, r.reply_id, r.date_created, r.last_updated, r.reply_content, r.r_nick_name, r.vote_count, r.refer, r.depth, r.step, count(r.reply_id) reply_count, 
ifnull(rv.id,0) rv_id, ifnull(rv.vote_id, 0) rv_vote_id, ifnull(rv.reply_voter, 'null') rv_reply_voter, ifnull(rv.date_created, 0) rv_date_created, 
ifnull(u.user_image_path,'null') u_user_image_path 
from reply as r 
left join reply_vote as rv  on r.id = rv.vote_id 
left join user as u on r.r_nick_name = u.nick_name 
where r.reply_id=22 and r.enabled=1;

select r.id, (select count(reply_id) from reply where reply_id=22 and enabled=1) from reply as r
left join reply_vote as rv on r.id = rv.vote_id
left join user as u on r.r_nick_name = u.nick_name
where reply_id=22 and r.enabled=1;


select * from reply;
select * from user;
select * from board;
select count(*) count from board where board_list_id=1 and enabled=1;
select * from board where board_list_id=1 and enabled=1;
select * from board where board_list_id=1;

select b.date_created, b.id, b.board_list_id, b.title, b.view_count, b.nick_name, b.file_path,(select count(id) from reply where reply_id=1) from board b where board_list_id = 3 order by id desc;



select date_created, content, vote_count, last_updated, anonymity, refer, depth, step, id,board_list_id, title, view_count, nick_name, file_path, 
(select count(id) from reply where reply_id=b.id and enabled=1) count, 
(select user_image_path from user where nick_name=b.nick_name) user_image_path 
from board b where board_list_id=1 and enabled=1 order by id desc limit 0,3;


select date_created , content , vote_count , last_updated , anonymity , refer , depth , step , id,board_list_id , title , view_count , nick_name , file_path , (select count(id) from reply where reply_id=b.id)count from board b where board_list_id=? order by id desc;

select id, board_list_id, nick_name, anonymity, create_ip, refer, depth, step, date_created, last_updated, view_count, vote_count, title, content, file_path,
(select count(id) from reply where reply_id=board.id and enabled=1) count
from board where enabled=1 and id=3;


select * from board;


insert into reply(reply_id, reply_content, r_nick_name, refer, depth, step) values(22,'안녕','test',0,0,0);






